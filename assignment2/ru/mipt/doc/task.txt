Решение надо выполнить на Java с помощью Hadoop Java  API (http://hadoop.apache.org/docs/r2.6.1/api/). Программа должна запускать map-reduce задачи, в конце читать из HDFS часть выходных данных и выводить на экран.

 
Исходные данные:

Посты stackoverflow.com

/data/stackexchange/posts - сами посты, записаны в строках, начинающихся с ‘<row’ (можно разбирать строки вручную, без специальных xml-парсеров). Значение полей:

PostTypeId - ‘1’, если это вопрос; ‘2’, если ответ на вопрос

Id - идентификатор; если это вопрос, то он откроется тут: http://stackoverflow.com/questions/<Id>

Score - показатель полезности этого вопроса или ответа

FavoriteCount - добавления вопроса в избранные

ParentId - для ответа - идентификатор поста-вопроса

OwnerUserId - идентификатор пользователя - автора поста

/data/stackexchange/users - пользователи

Id - идентификатор пользователя (в posts это OwnerUserId)

Age - возраст (может отсутствовать)

Reputation - уровень репутации пользователя

Замечания к использованию датасета:

для join с users используйте либо reduce-side join, либо bucket join, т.е. целиком в память этот файл поднимать нельзя

всюду в задачах, где говорится про “число пользователей” имеется в виду “число уникальных пользователей”

список ответов для одного вопроса считаем небольшим, его можно заносить в одно значение, сортировать в памяти и т.д.
————————————————————————————————————————————————————————————————————————————————
Задача!
Определите число вопросов на stackoverflow, для которых не соблюдается правило, что правильный ответ (т.е. ответ с наибольшим Score) дает пользователь с наибольшей репутацией. Для подсчета результирующего числа вопросов можно использовать счетчики (Hadoop counters).

Входные данные: посты stackoverflow.com

Формат вывода: идентификаторы вопросов, по одному на строку

На печать: число вопросов

————————————————————————————————————————————————————————————————————————————————
Команда для сборки проекта - ant
Команда запуска - hadoop jar jar/CountersSR.jar ru.mipt.src.CountersSR /data/stackexchange/posts /data/stackexchange/users ./result 

